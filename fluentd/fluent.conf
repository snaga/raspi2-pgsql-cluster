####
## Output descriptions:
##

# Treasure Data (http://www.treasure-data.com/) provides cloud based data
# analytics platform, which easily stores and processes data from td-agent.
# FREE plan is also provided.
# @see http://docs.fluentd.org/articles/http-to-td
#
# This section matches events whose tag is td.DATABASE.TABLE
#<match td.*.*>
#  type tdlog
#  apikey YOUR_API_KEY
#
#  auto_create_table
#  buffer_type file
#  buffer_path /var/log/td-agent/buffer/td
#
#  <secondary>
#    type file
#    path /var/log/td-agent/failed_records
#  </secondary>
#</match>

## match tag=debug.** and dump to console
<match debug.**>
  type stdout
</match>

####
## Source descriptions:
##

## built-in TCP input
## @see http://docs.fluentd.org/articles/in_forward
<source>
  type forward
</source>

## built-in UNIX socket input
#<source>
#  type unix
#</source>

# HTTP input
# POST http://localhost:8888/<tag>?json=<json>
# POST http://localhost:8888/td.myapp.login?json={"user"%3A"me"}
# @see http://docs.fluentd.org/articles/in_http
<source>
  type http
  port 8888
</source>

<source>
  type tail
  path /home/pi/pgdata/pg_log/postgresql-%d.log
#  path /var/log/pgsql/postgresql-%d.log
  pos_file /var/log/td-agent/postgresql.pos
# [2015-10-04 15:11:51 JST] [local] 5005: snaga/postgres: LOG:  connection authorized: user=snaga database=postgres
  tag pgsql.all
  format /^\[(?<time>.*) JST\] (?<host>[^ ]*) (?<pid>[^ ]*): (?<user>[^/]+)\/(?<dbname>[^:]+): (?<level>[^:]+):  (?<message>.*)$/
  time_format %Y-%m-%d %H:%M:%S
</source>

# Requires fluent-parser-plugin
# /opt/td-agent/embedded/bin/gem install fluent-plugin-parser
<match pgsql.all>
  type rewrite_tag_filter

  rewriterule1 message ^connection.received: pgsql.conn_recv
  rewriterule2 message ^connection.authorized: pgsql.conn_auth
  rewriterule3 message ^password.authentication.failed.for.user pgsql.auth_failed
  rewriterule4 message ^disconnection: pgsql.disconn
  rewriterule5 message ^permission.denied pgsql.perm_denied
  rewriterule6 message ^AUDIT, pgsql.pgaudit
</match>

<match pgsql.conn_recv>
  type         parser
  add_prefix   parsed
  reserve_data yes
  key_name     message
  format /^(?<event>connection received): host=(?<conn.host>[^ ]+)/
</match>

<match pgsql.conn_auth>
  type         parser
  add_prefix   parsed
  reserve_data yes
  key_name     message
  format /^(?<event>connection authorized): user=(?<conn.user>[^ ]+) database=(?<conn.dbname>.+)$/
</match>

<match pgsql.auth_failed>
  type         parser
  add_prefix   parsed
  reserve_data yes
  key_name     message
  format /^(?<event>password authentication failed) for user "(?<conn.user>.+)"$/
</match>

<match pgsql.disconn>
  type         parser
  add_prefix   parsed
  reserve_data yes
  key_name     message
  format /^(?<event>disconnection): session time: .* user=(?<conn.user>[^ ]+) database=(?<conn.dbname>[^ ]+) host=(?<conn.host>[^ ]+).*$/
</match>

<match pgsql.perm_denied>
  type         parser
  add_prefix   parsed
  reserve_data yes
  key_name     message
  format /^(?<event>permission denied) for (?<perm.target>.*)$/
</match>

<match pgsql.pgaudit>
  type         parser
  add_prefix   parsed
  reserve_data yes
  key_name     message
  # LOG:  AUDIT,2015-10-06 10:55:38.354537+09,postgres,snaga,snaga,psql,READ,SELECT,TABLE,pg_catalog.pg_database,select * from pg_database;
  format /^(?<event>AUDIT),(?<pgaudit.time>[^,]+),(?<pgaudit.dbname>[^,]*),(?<pgaudit.user>[^,]*),(?<pgaudit.effective_user>[^,]*),(?<pgaudit.application_name>[^,]*),(?<pgaudit.class>[^,]*),(?<pgaudit.tag>[^,]*),(?<pgaudit.object_type>[^,]*),(?<pgaudit.object_name>[^,]*),(?<pgaudit.command_text>.*)$/
</match>

<match pgsql.**>
  type file
  path /tmp/td-agent-pgsql.log
</match>

#<match parsed.**>
#  type file
#  path /tmp/td-agent-parsed.log
#</match>

# /opt/td-agent/embedded/bin/gem install fluent-plugin-pgjson --no-ri --no-rdoc
<match parsed.**>
  type pgjson
  host pi04
  port 5432
#  sslmode require
  sslmode disable
  database auditlogdb
  table auditlog_raw
  user audit001
  password postgres
  time_col time
  tag_col tag
  record_col record
  flush_interval 1s
</match>

#<match parsed.**>
#  buffer_type memory
#  buffer_chunk_limit 256m
#  buffer_queue_limit 128
#  flush_interval 1s
#  disable_retry_limit false
#  retry_limit 17
#  retry_wait 1s
#</match>

## live debugging agent
<source>
  type debug_agent
  bind 127.0.0.1
  port 24230
</source>

####
## Examples:
##

## File input
## read apache logs continuously and tags td.apache.access
#<source>
#  type tail
#  format apache
#  path /var/log/httpd-access.log
#  tag td.apache.access
#</source>

## File output
## match tag=local.** and write to file
#<match local.**>
#  type file
#  path /var/log/td-agent/access
#</match>

## Forwarding
## match tag=system.** and forward to another td-agent server
#<match system.**>
#  type forward
#  host 192.168.0.11
#  # secondary host is optional
#  <secondary>
#    host 192.168.0.12
#  </secondary>
#</match>

## Multiple output
## match tag=td.*.* and output to Treasure Data AND file
#<match td.*.*>
#  type copy
#  <store>
#    type tdlog
#    apikey API_KEY
#    auto_create_table
#    buffer_type file
#    buffer_path /var/log/td-agent/buffer/td
#  </store>
#  <store>
#    type file
#    path /var/log/td-agent/td-%Y-%m-%d/%H.log
#  </store>
#</match>
